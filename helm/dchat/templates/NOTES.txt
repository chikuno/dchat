Thank you for installing {{ .Chart.Name }}!

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
1. Get the application URL by running these commands:
  {{- if $.Values.ingress.tls }}
  https://{{ $host.host }}{{ .path }}
  {{- else }}
  http://{{ $host.host }}{{ .path }}
  {{- end }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "dchat.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
1. Get the application URL by running these commands:
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "dchat.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "dchat.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "dchat.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the status of your deployment:
  kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}

3. View logs:
  kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }} -f

4. Check metrics (if ServiceMonitor is enabled):
  {{- if .Values.monitoring.serviceMonitor.enabled }}
  Prometheus is scraping metrics from http://{{ include "dchat.fullname" . }}:{{ .Values.service.metricsPort }}/metrics
  {{- else }}
  ServiceMonitor is not enabled. Enable it in values.yaml to collect metrics.
  {{- end }}

5. Database connection:
  Host: {{ .Values.database.host }}
  Port: {{ .Values.database.port }}
  Database: {{ .Values.database.name }}

{{- if .Values.autoscaling.enabled }}
6. Autoscaling is enabled:
  Min replicas: {{ .Values.autoscaling.minReplicas }}
  Max replicas: {{ .Values.autoscaling.maxReplicas }}
  Target CPU: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}%
  Target Memory: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}%
{{- end }}

{{- if .Values.podDisruptionBudget.enabled }}
7. Pod Disruption Budget is active:
  Min available pods: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}

For more information, visit:
  Documentation: https://github.com/dchat/dchat/tree/main/docs
  Issues: https://github.com/dchat/dchat/issues
