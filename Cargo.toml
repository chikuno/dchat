[workspace]
members = [
    "crates/dchat-core",
    "crates/dchat-crypto",
    "crates/dchat-identity",
    "crates/dchat-network",
    "crates/dchat-messaging",
    "crates/dchat-storage",
    "crates/dchat-chain",
    "crates/dchat-blockchain",
    "crates/dchat-privacy",
    "crates/dchat-governance",
    "crates/dchat-distribution",
    "crates/dchat-marketplace",
    "crates/dchat-observability",
    "crates/dchat-bridge",
    "crates/dchat-accessibility",
    "crates/dchat-testing",
    "crates/dchat-sdk-rust",
    "crates/dchat-bots",
    "crates/dchat-data",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["dchat contributors"]

[package]
name = "dchat"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
description = "Decentralized end-to-end encrypted chat with sovereign identity and blockchain message ordering"
repository = "https://github.com/dchat/dchat"
homepage = "https://dchat.network"
keywords = ["encryption", "blockchain", "chat", "decentralized", "privacy"]
categories = ["cryptography", "network-programming", "web-programming"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
[dependencies]
dchat-core = { path = "crates/dchat-core" }
dchat-crypto = { path = "crates/dchat-crypto" }
dchat-identity = { path = "crates/dchat-identity" }
dchat-network = { path = "crates/dchat-network" }
dchat-messaging = { path = "crates/dchat-messaging" }
dchat-storage = { path = "crates/dchat-storage" }
dchat-chain = { path = "crates/dchat-chain" }
dchat-blockchain = { path = "crates/dchat-blockchain" }
dchat-privacy = { path = "crates/dchat-privacy" }
dchat-governance = { path = "crates/dchat-governance" }
dchat-distribution = { path = "crates/dchat-distribution" }
dchat-marketplace = { path = "crates/dchat-marketplace" }
dchat-observability = { path = "crates/dchat-observability" }
dchat-bridge = { path = "crates/dchat-bridge" }
dchat-accessibility = { path = "crates/dchat-accessibility" }
dchat-testing = { path = "crates/dchat-testing" }
dchat-bots = { path = "crates/dchat-bots" }
dchat-sdk-rust = { path = "crates/dchat-sdk-rust" }

tokio = { version = "1.40", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
uuid = { version = "1.10", features = ["v4", "serde"] }
serde = { version = "1.0", features = ["derive"] }
sha2 = "0.10"
hex = "0.4"

# CLI
clap = { version = "4.5", features = ["derive"] }
lazy_static = "1.4"
dirs = "5.0"

# HTTP server for health checks
warp = "0.3"
reqwest = { version = "0.11", features = ["json"] }
serde_json = "1.0"

# Configuration
toml = "0.8"
config = "0.13"

# Time
chrono = { version = "0.4", features = ["serde"] }

[dev-dependencies]
chrono = { version = "0.4", features = ["serde"] }
criterion = "0.7"
tempfile = "3.8"

[[bin]]
name = "dchat"
path = "src/main.rs"

[lib]
name = "dchat"
path = "src/lib.rs"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.40", features = ["full"] }
async-trait = "0.1"

# Cryptography
snow = "0.9"  # Noise Protocol
ed25519-dalek = { version = "2.1", features = ["rand_core"] }
x25519-dalek = "2.0"
curve25519-dalek = "4.1"
rand = "0.8"
rand_core = "0.6"
blake3 = "1.5"
sha2 = "0.10"
argon2 = "0.5"

# Post-quantum cryptography (ML-KEM is the new standard replacing Kyber)
pqcrypto-mlkem = "0.1"
pqcrypto-falcon = "0.3"
pqcrypto-traits = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Networking
libp2p = { version = "0.54", features = ["kad", "noise", "tcp", "dns", "websocket", "relay", "dcutr"] }
quinn = "0.11"  # QUIC

# Storage
sqlx = { version = "0.8", features = ["sqlite", "runtime-tokio"] }
rocksdb = "0.22"

# Blockchain
substrate-primitives = "0.9"
parity-scale-codec = { version = "3.6", features = ["derive"] }

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
prometheus = "0.13"
opentelemetry = "0.23"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Utilities
bytes = "1.7"
futures = "0.3"
hex = "0.4"
base64 = "0.22"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.10", features = ["v4", "serde"] }

# Testing
proptest = "1.5"
mockall = "0.13"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
tempfile = "3.8"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = true

[[bench]]
name = "message_throughput"
harness = false

[[bench]]
name = "crypto_performance"
harness = false

[[bench]]
name = "database_queries"
harness = false

[[bench]]
name = "network_latency"
harness = false

[[bench]]
name = "concurrent_clients"
harness = false

[[bench]]
name = "relay_performance"
harness = false

[[bench]]
name = "memory_usage"
harness = false
