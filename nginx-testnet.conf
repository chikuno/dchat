# Nginx reverse proxy configuration for dchat testnet
# Place this in /etc/nginx/sites-available/dchat-testnet
# Then: ln -s /etc/nginx/sites-available/dchat-testnet /etc/nginx/sites-enabled/
#
# Domain: rpc.webnetcore.top (Cloudflare CDN enabled)
# This configuration supports both HTTP and HTTPS

upstream validators {
    least_conn;
    server 127.0.0.1:7071;  # validator1
    server 127.0.0.1:7073;  # validator2
    server 127.0.0.1:7075;  # validator3
    server 127.0.0.1:7077;  # validator4
}

upstream relays {
    least_conn;
    server 127.0.0.1:7081;  # relay1
    server 127.0.0.1:7083;  # relay2
    server 127.0.0.1:7085;  # relay3
    server 127.0.0.1:7087;  # relay4
    server 127.0.0.1:7089;  # relay5
    server 127.0.0.1:7091;  # relay6
    server 127.0.0.1:7093;  # relay7
}

# HTTP server - redirect to HTTPS for security
server {
    listen 80;
    listen [::]:80;
    server_name rpc.webnetcore.top;

    # For Let's Encrypt SSL certificate challenges
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Allow health checks over HTTP (for monitoring tools)
    location /health {
        proxy_pass http://validators/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
        proxy_next_upstream error timeout http_503;
        proxy_next_upstream_tries 3;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - main configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name rpc.webnetcore.top;

    # Let's Encrypt SSL Certificate (automatically configured by deploy script)
    # The deployment script will obtain and configure this automatically
    ssl_certificate /etc/letsencrypt/live/rpc.webnetcore.top/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rpc.webnetcore.top/privkey.pem;
    
    # Alternative: Cloudflare Origin Certificate (15-year validity, manual setup)
    # Generate at: https://dash.cloudflare.com/[your-account]/[your-zone]/ssl-tls/origin
    # ssl_certificate /etc/ssl/certs/cloudflare-origin.crt;
    # ssl_certificate_key /etc/ssl/private/cloudflare-origin.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Cloudflare real visitor IP restoration
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    real_ip_header CF-Connecting-IP;

    # Health check endpoint (load-balanced across validators)
    location /health {
        proxy_pass http://validators/health;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
        
        # Health check specific settings
        proxy_next_upstream error timeout http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # Validator API endpoints
    location /api/validators/ {
        proxy_pass http://validators/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Relay API endpoints
    location /api/relays/ {
        proxy_pass http://relays/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Prometheus (metrics)
    location /prometheus/ {
        proxy_pass http://127.0.0.1:9095/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Authentication (optional - uncomment and set password)
        # auth_basic "Prometheus";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }

    # Grafana (dashboards)
    location /grafana/ {
        proxy_pass http://127.0.0.1:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Grafana specific settings
        rewrite ^/grafana/(.*) /$1 break;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Jaeger (tracing UI)
    location /jaeger/ {
        proxy_pass http://127.0.0.1:16686/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Status page
    location /status {
        return 200 '{"service":"dchat-testnet","status":"online","version":"1.0.0"}';
        add_header Content-Type application/json;
    }

    # Root - show service info
    location = / {
        return 200 '{"service":"dchat-testnet","status":"online","version":"1.0.0","domain":"rpc.webnetcore.top","endpoints":["/health","/prometheus/","/grafana/","/jaeger/","/api/validators/","/api/relays/"]}';
        add_header Content-Type application/json;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Access logging
    access_log /var/log/nginx/dchat-testnet-access.log;
    error_log /var/log/nginx/dchat-testnet-error.log;
}
