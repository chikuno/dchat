# Nginx reverse proxy configuration for dchat testnet
# Place this in /etc/nginx/sites-available/dchat-testnet
# Then: ln -s /etc/nginx/sites-available/dchat-testnet /etc/nginx/sites-enabled/

upstream validators {
    least_conn;
    server 127.0.0.1:7071;  # validator1
    server 127.0.0.1:7073;  # validator2
    server 127.0.0.1:7075;  # validator3
    server 127.0.0.1:7077;  # validator4
}

upstream relays {
    least_conn;
    server 127.0.0.1:7081;  # relay1
    server 127.0.0.1:7083;  # relay2
    server 127.0.0.1:7085;  # relay3
    server 127.0.0.1:7087;  # relay4
    server 127.0.0.1:7089;  # relay5
    server 127.0.0.1:7091;  # relay6
    server 127.0.0.1:7093;  # relay7
}

# Main dchat API server
server {
    listen 80;
    listen [::]:80;
    server_name rpc.webnetcore.top;

    # For Let's Encrypt SSL (optional)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Health check endpoint (load-balanced across validators)
    location /health {
        proxy_pass http://validators/health;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
        
        # Health check specific settings
        proxy_next_upstream error timeout http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # Validator API endpoints
    location /api/validators/ {
        proxy_pass http://validators/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Relay API endpoints
    location /api/relays/ {
        proxy_pass http://relays/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Prometheus (metrics)
    location /prometheus/ {
        proxy_pass http://127.0.0.1:9095/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Authentication (optional - uncomment and set password)
        # auth_basic "Prometheus";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }

    # Grafana (dashboards)
    location /grafana/ {
        proxy_pass http://127.0.0.1:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Grafana specific settings
        rewrite ^/grafana/(.*) /$1 break;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Jaeger (tracing UI)
    location /jaeger/ {
        proxy_pass http://127.0.0.1:16686/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Status page
    location /status {
        return 200 '{"service":"dchat-testnet","status":"online","version":"1.0.0"}';
        add_header Content-Type application/json;
    }

    # Default - redirect to health
    location / {
        return 301 /health;
    }
}

# SSL configuration (uncomment after getting SSL cert)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name rpc.webnetcore.top;
#
#     ssl_certificate /etc/letsencrypt/live/rpc.webnetcore.top/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/rpc.webnetcore.top/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     # ... copy all location blocks from http server here ...
# }
